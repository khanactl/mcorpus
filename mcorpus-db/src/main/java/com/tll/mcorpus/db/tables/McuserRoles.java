/*
 * This file is generated by jOOQ.
 */
package com.tll.mcorpus.db.tables;


import com.tll.mcorpus.db.Indexes;
import com.tll.mcorpus.db.Keys;
import com.tll.mcorpus.db.Public;
import com.tll.mcorpus.db.enums.McuserRole;
import com.tll.mcorpus.db.tables.records.McuserRolesRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class McuserRoles extends TableImpl<McuserRolesRecord> {

    private static final long serialVersionUID = 1589972783;

    /**
     * The reference instance of <code>public.mcuser_roles</code>
     */
    public static final McuserRoles MCUSER_ROLES = new McuserRoles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<McuserRolesRecord> getRecordType() {
        return McuserRolesRecord.class;
    }

    /**
     * The column <code>public.mcuser_roles.uid</code>.
     */
    public final TableField<McuserRolesRecord, UUID> UID = createField("uid", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.mcuser_roles.role</code>.
     */
    public final TableField<McuserRolesRecord, McuserRole> ROLE = createField("role", org.jooq.impl.SQLDataType.VARCHAR.nullable(false).asEnumDataType(com.tll.mcorpus.db.enums.McuserRole.class), this, "");

    /**
     * Create a <code>public.mcuser_roles</code> table reference
     */
    public McuserRoles() {
        this(DSL.name("mcuser_roles"), null);
    }

    /**
     * Create an aliased <code>public.mcuser_roles</code> table reference
     */
    public McuserRoles(String alias) {
        this(DSL.name(alias), MCUSER_ROLES);
    }

    /**
     * Create an aliased <code>public.mcuser_roles</code> table reference
     */
    public McuserRoles(Name alias) {
        this(alias, MCUSER_ROLES);
    }

    private McuserRoles(Name alias, Table<McuserRolesRecord> aliased) {
        this(alias, aliased, null);
    }

    private McuserRoles(Name alias, Table<McuserRolesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> McuserRoles(Table<O> child, ForeignKey<O, McuserRolesRecord> key) {
        super(child, key, MCUSER_ROLES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MCUSER_ROLES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<McuserRolesRecord> getPrimaryKey() {
        return Keys.MCUSER_ROLES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<McuserRolesRecord>> getKeys() {
        return Arrays.<UniqueKey<McuserRolesRecord>>asList(Keys.MCUSER_ROLES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public McuserRoles as(String alias) {
        return new McuserRoles(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public McuserRoles as(Name alias) {
        return new McuserRoles(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public McuserRoles rename(String name) {
        return new McuserRoles(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public McuserRoles rename(Name name) {
        return new McuserRoles(name, null);
    }
}
