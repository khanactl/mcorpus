/*
 * This file is generated by jOOQ.
*/
package com.tll.mcorpus.db.udt;


import com.tll.mcorpus.db.Public;
import com.tll.mcorpus.db.enums.JwtStatus;
import com.tll.mcorpus.db.enums.McuserStatus;
import com.tll.mcorpus.db.udt.records.JwtAndMcuserStatusRecord;

import javax.annotation.Generated;

import org.jooq.Schema;
import org.jooq.UDTField;
import org.jooq.impl.UDTImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JwtAndMcuserStatus extends UDTImpl<JwtAndMcuserStatusRecord> {

    private static final long serialVersionUID = 1018768885;

    /**
     * The reference instance of <code>public.jwt_and_mcuser_status</code>
     */
    public static final JwtAndMcuserStatus JWT_AND_MCUSER_STATUS = new JwtAndMcuserStatus();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JwtAndMcuserStatusRecord> getRecordType() {
        return JwtAndMcuserStatusRecord.class;
    }

    /**
     * The attribute <code>public.jwt_and_mcuser_status.jwt_id_status</code>.
     */
    public static final UDTField<JwtAndMcuserStatusRecord, JwtStatus> JWT_ID_STATUS = createField("jwt_id_status", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(com.tll.mcorpus.db.enums.JwtStatus.class), JWT_AND_MCUSER_STATUS, "");

    /**
     * The attribute <code>public.jwt_and_mcuser_status.mcuser_status</code>.
     */
    public static final UDTField<JwtAndMcuserStatusRecord, McuserStatus> MCUSER_STATUS = createField("mcuser_status", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(com.tll.mcorpus.db.enums.McuserStatus.class), JWT_AND_MCUSER_STATUS, "");

    /**
     * No further instances allowed
     */
    private JwtAndMcuserStatus() {
        super("jwt_and_mcuser_status", null, null, false);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }
}
